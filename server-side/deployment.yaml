version: '3.3'

services:
  client:
    build:
      context: .
      dockerfile: ./client-microservice/Dockerfile
    ports:
      - 7000:7000
    networks:
      - cache
      - database
      - compute
    restart: always

  compute:
    build:
      context: .
      dockerfile: ./compute-microservice/Dockerfile
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - compute
      - cache
    restart: always

  cache:
    build:
      context: .
      dockerfile: ./cache-microservice/Dockerfile
    networks:
      - cache
      - io
      - redis
    restart: always
  
  redis:
    build:
      context: .
      dockerfile: ./redis/Dockerfile
    command: [sh, -c, "rm -f /data/dump.rdb && redis-server"]
    networks:
      - redis

  db:
    build:
      context: .
      dockerfile: ./db-microservice/Dockerfile
    ports:
      - 10000:10000
    depends_on:
      - mysql
    networks:
      - database
      - mysql
    restart: always

  io:
    build:
      context: .
      dockerfile: ./io-microservice/Dockerfile
    networks:
      - io
    volumes:
      - D:\Projects\OnlineTaskRunner\server-side\file_system:/files
    restart: always

  mysql:
    build:
      context: .
      dockerfile: ./sql/Dockerfile
    networks:
      - mysql
    volumes:
      - db_data:/var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: university

volumes:
  db_data   : {}
  file_data : {}

networks:
  database : {}
  cache    : {}
  compute  : {}
  io       : {}
  mysql    : {}
  redis    : {}